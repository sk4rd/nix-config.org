#+title: Sk4rd's NixOS Config in Org-Mode
#+property: header-args :mkdirp yes

[[./colors.png]]

This is my NixOS and HomeManager configuration using flakes, which is
written in Emacs' org-mode. It is an attempt to better structure my
config and create a place to edit and maintain configs for other
programs declaratively.

* Flake

#+begin_src nix :tangle flake.nix
  {
    description = "Sk4rd's NixOS & HomeManager Config";

    inputs = {
      nixpkgs.url = "github:NixOS/nixpkgs/nixos-24.11";
      home-manager.url = "github:nix-community/home-manager/release-24.11";
      home-manager.inputs.nixpkgs.follows = "nixpkgs";
      nixos-hardware.url = "github:NixOS/nixos-hardware";
      agenix.url = "github:ryantm/agenix";
    };

    outputs =
      { self, ... }@inputs:
      let
        system = "x86_64-linux";
        pkgs = import inputs.nixpkgs {
          inherit system;
          config.allowUnfree = true;
        };
      in
      {
        nixosConfigurations.laptop = inputs.nixpkgs.lib.nixosSystem {
          inherit pkgs;
          modules = [
            inputs.nixos-hardware.nixosModules.lenovo-thinkpad-z13-gen1
          ];
        };

        homeConfigurations = {
        };
      };
  }
#+end_src

* NixOS

** Common Configuration

*** Generic
#+begin_src nix :tangle hosts/common/generic.nix
  { ... }:

  {
    # Set the time zone
    time.timeZone = "Europe/Berlin";

    # Enable experimental nix features
    nix.settings.experimental-features = [
      "nix-command"
      "flakes"
    ];

    # Change font settings
    fonts = {
      enableDefaultPackages = true;
      packages = with pkgs; [
        (nerdfonts.override { fonts = [ "Iosevka" ]; })
      ];
      fontconfig = {
        enable = true;
        useEmbeddedBitmaps = true;
      };
      fontDir.enable = true;
    };

    # Do not change this after building your system
    system.stateVersion = "24.11";
  }
#+end_src

*** Bootloader
#+begin_src nix :tangle hosts/common/boot.nix
  { ... }:

  {
    boot.loader = {
      efi.canTouchEfiVariables = true;
      systemd-boot = {
        enable = true;
        editor = false;
        configurationLimit = 30;
      };
    };
  }
#+end_src

*** Users
#+begin_src nix :tangle hosts/common/users.nix
  { config, pkgs, ... }:

  let
    username = "miko"; # Change this value to your own
    description = "Mikolaj Bajtkiewicz"; # Usually set to your name
  in
  {
    users.defaultUserShell = pkgs.zsh;
    users.users.${username} = {
      inherit description;
      isNormalUser = true;
      useDefaultShell = true;
      extraGroups = [
        "wheel"
        "dialout"
        (if config.virtualisation.docker.enable then "docker" else "")
      ];
    };
  }
#+end_src
* HomeManager

